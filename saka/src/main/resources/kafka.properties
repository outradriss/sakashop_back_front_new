
# ===========================
# 2. Kafka Broker Configuration
# ===========================
# List of Kafka brokers (comma-separated) for producer and consumer communication
spring.kafka.bootstrap-servers=localhost:9092

# Client ID to uniquely identify this application instance
spring.kafka.producer.client-id=my-app-producer
spring.kafka.consumer.client-id=my-app-consumer

# Security protocol (default is PLAINTEXT, but prefer SSL/SASL in production)
spring.kafka.properties.security.protocol=SSL

# ===========================
# 3. Producer Configuration
# ===========================
# Serializer for key and value (JSON in this case)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Acknowledgment level for message delivery (all replicas must acknowledge)
spring.kafka.producer.acks=all

# Max size of a message (increase for larger payloads)
spring.kafka.producer.max-request-size=1048576

# Number of retries for failed messages
spring.kafka.producer.retries=3

# Timeout for message acknowledgment
spring.kafka.producer.request-timeout-ms=15000

# Batch size for improved throughput
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=10

# Compression type for performance
spring.kafka.producer.compression-type=gzip

# ===========================
# 4. Consumer Configuration
# ===========================
# Deserializer for key and value
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Group ID for consumer groups
spring.kafka.consumer.group-id=my-app-group

# Offset reset strategy (earliest for new consumers)
spring.kafka.consumer.auto-offset-reset=earliest

# Enable auto-commit of offsets (false for manual management)
spring.kafka.consumer.enable-auto-commit=false

# Maximum records fetched in a single poll
spring.kafka.consumer.max-poll-records=500

# Interval for polling messages
spring.kafka.consumer.poll-timeout=3000

# ===========================
# 5. SSL Security Configuration
# ===========================
# SSL truststore for authenticating Kafka brokers
spring.kafka.ssl.truststore-location=file:/path/to/kafka.truststore.jks
spring.kafka.ssl.truststore-password=truststore-password

# SSL keystore for client authentication (if required)
spring.kafka.ssl.keystore-location=file:/path/to/kafka.keystore.jks
spring.kafka.ssl.keystore-password=keystore-password

# SSL key password
spring.kafka.ssl.key-password=key-password

# ===========================
# 6. Additional Kafka Settings
# ===========================
# Kafka topic defaults (for topic creation via the app)
spring.kafka.topic.orders.name=orders-topic
spring.kafka.topic.orders.partitions=3
spring.kafka.topic.orders.replication-factor=3


# Heartbeat interval for consumer group
spring.kafka.consumer.heartbeat-interval=3000

# Session timeout for detecting consumer failures
spring.kafka.consumer.session-timeout-ms=10000

# ===========================
# 7. Monitoring and Metrics
# ===========================
# Enable Kafka metrics to be exposed
management.endpoint.kafka.enabled=true
management.endpoints.web.exposure.include=*
management.metrics.export.prometheus.enabled=true

# detection des pannes
broker.session.timeout.ms=6000
broker.heartbeat.interval.ms=2000
