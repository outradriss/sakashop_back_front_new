import { LegendPosition } from './types/legend.model';
import { ScaleType } from './types/scale-type.enum';
export function calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {
    let xOffset = margins[3];
    let chartWidth = width;
    let chartHeight = height - margins[0] - margins[2];
    if (showLegend && legendPosition === LegendPosition.Right) {
        if (legendType === ScaleType.Ordinal) {
            columns -= 2;
        }
        else {
            columns -= 1;
        }
    }
    chartWidth = (chartWidth * columns) / 12;
    chartWidth = chartWidth - margins[1] - margins[3];
    if (showXAxis) {
        chartHeight -= 5;
        chartHeight -= xAxisHeight;
        if (showXLabel) {
            // text height + spacing between axis label and tick labels
            const offset = 25 + 5;
            chartHeight -= offset;
        }
    }
    if (showYAxis) {
        chartWidth -= 5;
        chartWidth -= yAxisWidth;
        xOffset += yAxisWidth;
        xOffset += 10;
        if (showYLabel) {
            // text height + spacing between axis label and tick labels
            const offset = 25 + 5;
            chartWidth -= offset;
            xOffset += offset;
        }
    }
    chartWidth = Math.max(0, chartWidth);
    chartHeight = Math.max(0, chartHeight);
    return {
        width: Math.floor(chartWidth),
        height: Math.floor(chartHeight),
        xOffset: Math.floor(xOffset)
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy1kaW1lbnNpb25zLmhlbHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N3aW1sYW5lL25neC1jaGFydHMvc3JjL2xpYi9jb21tb24vdmlldy1kaW1lbnNpb25zLmhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBR3BELE1BQU0sVUFBVSx1QkFBdUIsQ0FBQyxFQUN0QyxLQUFLLEVBQ0wsTUFBTSxFQUNOLE9BQU8sRUFDUCxTQUFTLEdBQUcsS0FBSyxFQUNqQixTQUFTLEdBQUcsS0FBSyxFQUNqQixXQUFXLEdBQUcsQ0FBQyxFQUNmLFVBQVUsR0FBRyxDQUFDLEVBQ2QsVUFBVSxHQUFHLEtBQUssRUFDbEIsVUFBVSxHQUFHLEtBQUssRUFDbEIsVUFBVSxHQUFHLEtBQUssRUFDbEIsVUFBVSxHQUFHLFNBQVMsQ0FBQyxPQUFPLEVBQzlCLGNBQWMsR0FBRyxjQUFjLENBQUMsS0FBSyxFQUNyQyxPQUFPLEdBQUcsRUFBRSxFQUNiO0lBQ0MsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pCLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztJQUN2QixJQUFJLFdBQVcsR0FBRyxNQUFNLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVuRCxJQUFJLFVBQVUsSUFBSSxjQUFjLEtBQUssY0FBYyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzFELElBQUksVUFBVSxLQUFLLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNyQyxPQUFPLElBQUksQ0FBQyxDQUFDO1FBQ2YsQ0FBQzthQUFNLENBQUM7WUFDTixPQUFPLElBQUksQ0FBQyxDQUFDO1FBQ2YsQ0FBQztJQUNILENBQUM7SUFFRCxVQUFVLEdBQUcsQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBRXpDLFVBQVUsR0FBRyxVQUFVLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVsRCxJQUFJLFNBQVMsRUFBRSxDQUFDO1FBQ2QsV0FBVyxJQUFJLENBQUMsQ0FBQztRQUNqQixXQUFXLElBQUksV0FBVyxDQUFDO1FBRTNCLElBQUksVUFBVSxFQUFFLENBQUM7WUFDZiwyREFBMkQ7WUFDM0QsTUFBTSxNQUFNLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUN0QixXQUFXLElBQUksTUFBTSxDQUFDO1FBQ3hCLENBQUM7SUFDSCxDQUFDO0lBRUQsSUFBSSxTQUFTLEVBQUUsQ0FBQztRQUNkLFVBQVUsSUFBSSxDQUFDLENBQUM7UUFDaEIsVUFBVSxJQUFJLFVBQVUsQ0FBQztRQUN6QixPQUFPLElBQUksVUFBVSxDQUFDO1FBQ3RCLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFFZCxJQUFJLFVBQVUsRUFBRSxDQUFDO1lBQ2YsMkRBQTJEO1lBQzNELE1BQU0sTUFBTSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDdEIsVUFBVSxJQUFJLE1BQU0sQ0FBQztZQUNyQixPQUFPLElBQUksTUFBTSxDQUFDO1FBQ3BCLENBQUM7SUFDSCxDQUFDO0lBRUQsVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ3JDLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUV2QyxPQUFPO1FBQ0wsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDO1FBQzdCLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQztRQUMvQixPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7S0FDN0IsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMZWdlbmRQb3NpdGlvbiB9IGZyb20gJy4vdHlwZXMvbGVnZW5kLm1vZGVsJztcbmltcG9ydCB7IFNjYWxlVHlwZSB9IGZyb20gJy4vdHlwZXMvc2NhbGUtdHlwZS5lbnVtJztcbmltcG9ydCB7IFZpZXdEaW1lbnNpb25zIH0gZnJvbSAnLi90eXBlcy92aWV3LWRpbWVuc2lvbi5pbnRlcmZhY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRlVmlld0RpbWVuc2lvbnMoe1xuICB3aWR0aCxcbiAgaGVpZ2h0LFxuICBtYXJnaW5zLFxuICBzaG93WEF4aXMgPSBmYWxzZSxcbiAgc2hvd1lBeGlzID0gZmFsc2UsXG4gIHhBeGlzSGVpZ2h0ID0gMCxcbiAgeUF4aXNXaWR0aCA9IDAsXG4gIHNob3dYTGFiZWwgPSBmYWxzZSxcbiAgc2hvd1lMYWJlbCA9IGZhbHNlLFxuICBzaG93TGVnZW5kID0gZmFsc2UsXG4gIGxlZ2VuZFR5cGUgPSBTY2FsZVR5cGUuT3JkaW5hbCxcbiAgbGVnZW5kUG9zaXRpb24gPSBMZWdlbmRQb3NpdGlvbi5SaWdodCxcbiAgY29sdW1ucyA9IDEyXG59KTogVmlld0RpbWVuc2lvbnMge1xuICBsZXQgeE9mZnNldCA9IG1hcmdpbnNbM107XG4gIGxldCBjaGFydFdpZHRoID0gd2lkdGg7XG4gIGxldCBjaGFydEhlaWdodCA9IGhlaWdodCAtIG1hcmdpbnNbMF0gLSBtYXJnaW5zWzJdO1xuXG4gIGlmIChzaG93TGVnZW5kICYmIGxlZ2VuZFBvc2l0aW9uID09PSBMZWdlbmRQb3NpdGlvbi5SaWdodCkge1xuICAgIGlmIChsZWdlbmRUeXBlID09PSBTY2FsZVR5cGUuT3JkaW5hbCkge1xuICAgICAgY29sdW1ucyAtPSAyO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb2x1bW5zIC09IDE7XG4gICAgfVxuICB9XG5cbiAgY2hhcnRXaWR0aCA9IChjaGFydFdpZHRoICogY29sdW1ucykgLyAxMjtcblxuICBjaGFydFdpZHRoID0gY2hhcnRXaWR0aCAtIG1hcmdpbnNbMV0gLSBtYXJnaW5zWzNdO1xuXG4gIGlmIChzaG93WEF4aXMpIHtcbiAgICBjaGFydEhlaWdodCAtPSA1O1xuICAgIGNoYXJ0SGVpZ2h0IC09IHhBeGlzSGVpZ2h0O1xuXG4gICAgaWYgKHNob3dYTGFiZWwpIHtcbiAgICAgIC8vIHRleHQgaGVpZ2h0ICsgc3BhY2luZyBiZXR3ZWVuIGF4aXMgbGFiZWwgYW5kIHRpY2sgbGFiZWxzXG4gICAgICBjb25zdCBvZmZzZXQgPSAyNSArIDU7XG4gICAgICBjaGFydEhlaWdodCAtPSBvZmZzZXQ7XG4gICAgfVxuICB9XG5cbiAgaWYgKHNob3dZQXhpcykge1xuICAgIGNoYXJ0V2lkdGggLT0gNTtcbiAgICBjaGFydFdpZHRoIC09IHlBeGlzV2lkdGg7XG4gICAgeE9mZnNldCArPSB5QXhpc1dpZHRoO1xuICAgIHhPZmZzZXQgKz0gMTA7XG5cbiAgICBpZiAoc2hvd1lMYWJlbCkge1xuICAgICAgLy8gdGV4dCBoZWlnaHQgKyBzcGFjaW5nIGJldHdlZW4gYXhpcyBsYWJlbCBhbmQgdGljayBsYWJlbHNcbiAgICAgIGNvbnN0IG9mZnNldCA9IDI1ICsgNTtcbiAgICAgIGNoYXJ0V2lkdGggLT0gb2Zmc2V0O1xuICAgICAgeE9mZnNldCArPSBvZmZzZXQ7XG4gICAgfVxuICB9XG5cbiAgY2hhcnRXaWR0aCA9IE1hdGgubWF4KDAsIGNoYXJ0V2lkdGgpO1xuICBjaGFydEhlaWdodCA9IE1hdGgubWF4KDAsIGNoYXJ0SGVpZ2h0KTtcblxuICByZXR1cm4ge1xuICAgIHdpZHRoOiBNYXRoLmZsb29yKGNoYXJ0V2lkdGgpLFxuICAgIGhlaWdodDogTWF0aC5mbG9vcihjaGFydEhlaWdodCksXG4gICAgeE9mZnNldDogTWF0aC5mbG9vcih4T2Zmc2V0KVxuICB9O1xufVxuIl19